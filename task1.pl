% Первая часть задания - предикаты работы со списками

% Реализация стандартных предикатов для списков

% Длина списка
len([], 0).
len([_|L], N):-len(L, N1), N is N1 + 1.

% Принадлежность элемента списку
memb(X, [X|_]).
memb(X, [_|T]):-memb(X, T).

% Слияние списков
app([], L, L).
app([X|T], L, [X|R]):-app(T, L, R).

% Удаление элемента из списка
rem(A, [A|T], T).
rem(A, [B|T], [B|C]):-rem(A, T, C).

% Перестановки элементов в списке
permute([], []).
permute(L, [X|T]):-rem(X, L, R), permute(R, T).

% Подсписки списка
sublist(S, L):-app(_, R, L), app(S, _, R).

% Удаление последних трёх элементов списка
remo_end_3(L, R):-append(R, X, L), X = [_,_,_].

% Удаление последних трёх элементов списка без стандартных предикатов

not_stand_rem([_],[]) :- !.
not_stand_rem([_,_],[]) :- !.
not_stand_rem([_,_,_],[]) :- !.
not_stand_rem([H|T],[H|Q]) :- not_stand_rem(T,Q).


sum([], 0).
sum([H|T], S) :-sum(T, Tail), 
S = Tail + H.

% Нахождение среднего арифметического элементов списка
middle(L,A):-sum(L,S), 
length(L,K), 
A is S/K.
